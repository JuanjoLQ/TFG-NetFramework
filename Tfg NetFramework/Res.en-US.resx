<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="addCustomer" xml:space="preserve">
    <value>Add Customer</value>
  </data>
  <data name="addLeadToPipeline" xml:space="preserve">
    <value>Add Lead to Pipeline</value>
  </data>
  <data name="addNewProduct" xml:space="preserve">
    <value>Add New Product</value>
  </data>
  <data name="addProductToWarehouse" xml:space="preserve">
    <value>Add Product to Warehouse</value>
  </data>
  <data name="allowances" xml:space="preserve">
    <value>Allowances</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="AssignedTo" xml:space="preserve">
    <value>Assigned To</value>
  </data>
  <data name="btnRegistrar" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="ContactInfo" xml:space="preserve">
    <value>Contact Information</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="CreatedAt" xml:space="preserve">
    <value>CreatedAt</value>
  </data>
  <data name="CreateItem" xml:space="preserve">
    <value>Create Item</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="CustomerEmail" xml:space="preserve">
    <value>Customer Email</value>
  </data>
  <data name="CustomerInfo" xml:space="preserve">
    <value>Customer Information</value>
  </data>
  <data name="customers" xml:space="preserve">
    <value>Customers</value>
  </data>
  <data name="date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="deleteCustomer" xml:space="preserve">
    <value>Delete Customer</value>
  </data>
  <data name="department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="destination" xml:space="preserve">
    <value>Destination</value>
  </data>
  <data name="DetailsSale" xml:space="preserve">
    <value>DetailsSale</value>
  </data>
  <data name="doBackUp" xml:space="preserve">
    <value>Do BackUp</value>
  </data>
  <data name="DoSale" xml:space="preserve">
    <value>Do Sale</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Email1" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Employees" xml:space="preserve">
    <value>Employees</value>
  </data>
  <data name="endDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="endHour" xml:space="preserve">
    <value>End Hour</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="ExpDate" xml:space="preserve">
    <value>Expected Closing</value>
  </data>
  <data name="final" xml:space="preserve">
    <value>Final</value>
  </data>
  <data name="gbLogin" xml:space="preserve">
    <value>Please, Login</value>
  </data>
  <data name="idAllowance" xml:space="preserve">
    <value>Id Allowance</value>
  </data>
  <data name="idMileage" xml:space="preserve">
    <value>Id Mileage</value>
  </data>
  <data name="idUser" xml:space="preserve">
    <value>Id User</value>
  </data>
  <data name="inventory" xml:space="preserve">
    <value>Inventory</value>
  </data>
  <data name="invoice" xml:space="preserve">
    <value>Invoice</value>
  </data>
  <data name="ItemAmount" xml:space="preserve">
    <value>Item Amount</value>
  </data>
  <data name="ItemName" xml:space="preserve">
    <value>Item Name</value>
  </data>
  <data name="ItemState" xml:space="preserve">
    <value>Item State</value>
  </data>
  <data name="job" xml:space="preserve">
    <value>Job</value>
  </data>
  <data name="kilometers" xml:space="preserve">
    <value>Kilometers</value>
  </data>
  <data name="lbGestUsers" xml:space="preserve">
    <value>User Management</value>
  </data>
  <data name="lbHomePage" xml:space="preserve">
    <value>Home Page</value>
  </data>
  <data name="lbMenu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="lbRegisterUser" xml:space="preserve">
    <value>User Registration</value>
  </data>
  <data name="lbReqAllowancesOptions" xml:space="preserve">
    <value>Choose an option: </value>
  </data>
  <data name="lbRole" xml:space="preserve">
    <value>Job: </value>
  </data>
  <data name="lbTitleReqAllowances" xml:space="preserve">
    <value>Allowance Claim</value>
  </data>
  <data name="lbUser" xml:space="preserve">
    <value>User: </value>
  </data>
  <data name="LeadAmount" xml:space="preserve">
    <value>Lead Amount</value>
  </data>
  <data name="LeadAssignedTo" xml:space="preserve">
    <value>Lead Assigned To</value>
  </data>
  <data name="LeadDate" xml:space="preserve">
    <value>Lead Date</value>
  </data>
  <data name="LeadName" xml:space="preserve">
    <value>Lead Name</value>
  </data>
  <data name="LeadNotes" xml:space="preserve">
    <value>Lead Notes</value>
  </data>
  <data name="LeadStage" xml:space="preserve">
    <value>Lead Stage</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Login1" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="MainAddress" xml:space="preserve">
    <value>Main Address</value>
  </data>
  <data name="manageAllowances" xml:space="preserve">
    <value>Allowance Management</value>
  </data>
  <data name="max" xml:space="preserve">
    <value>Max</value>
  </data>
  <data name="mileage" xml:space="preserve">
    <value>Mileage</value>
  </data>
  <data name="modules" xml:space="preserve">
    <value>Modules</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NameCompany" xml:space="preserve">
    <value>Name Company</value>
  </data>
  <data name="nameCustomer" xml:space="preserve">
    <value>Name Customer</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="NewCustomer" xml:space="preserve">
    <value>NewCustomer</value>
  </data>
  <data name="NewInventoryItem" xml:space="preserve">
    <value>New Inventory Item</value>
  </data>
  <data name="NewLead" xml:space="preserve">
    <value>NewLead</value>
  </data>
  <data name="newState" xml:space="preserve">
    <value>New State: </value>
  </data>
  <data name="newStateMileage" xml:space="preserve">
    <value>New State of Mileage: </value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="observations" xml:space="preserve">
    <value>Observations</value>
  </data>
  <data name="origin" xml:space="preserve">
    <value>Origin</value>
  </data>
  <data name="Pass" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="passwd" xml:space="preserve">
    <value>1234</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="pManAllowance" xml:space="preserve">
    <value>Allowance Management</value>
  </data>
  <data name="pManUsers" xml:space="preserve">
    <value>User Management</value>
  </data>
  <data name="PricePerItem" xml:space="preserve">
    <value>Price Per Item</value>
  </data>
  <data name="pricePerKilometer" xml:space="preserve">
    <value>Price per Kilometer</value>
  </data>
  <data name="ProductCategory" xml:space="preserve">
    <value>Product Category</value>
  </data>
  <data name="ProductsIncludedInTheSale" xml:space="preserve">
    <value>ProductsIncludedInTheSale</value>
  </data>
  <data name="ProductsIntoWarehouses" xml:space="preserve">
    <value>Products Into Warehouses</value>
  </data>
  <data name="proposition" xml:space="preserve">
    <value>Proposition</value>
  </data>
  <data name="pSettings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="pSolAllowance" xml:space="preserve">
    <value>Request Allowance</value>
  </data>
  <data name="qualified" xml:space="preserve">
    <value>Qualified</value>
  </data>
  <data name="quantityToStore" xml:space="preserve">
    <value>Quantity to Store</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="removeAllowance" xml:space="preserve">
    <value>Remove Allowance</value>
  </data>
  <data name="removeMileage" xml:space="preserve">
    <value>Remove Mileage</value>
  </data>
  <data name="removeUser" xml:space="preserve">
    <value>Remove User</value>
  </data>
  <data name="requestAllowance" xml:space="preserve">
    <value>Allowance Claim</value>
  </data>
  <data name="requestMileage" xml:space="preserve">
    <value>Mileage Claim</value>
  </data>
  <data name="restoreBackUp" xml:space="preserve">
    <value>Restore BackUp</value>
  </data>
  <data name="sales" xml:space="preserve">
    <value>Sales</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SecondaryAddress" xml:space="preserve">
    <value>Secondary Address</value>
  </data>
  <data name="settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Stage" xml:space="preserve">
    <value>Stage</value>
  </data>
  <data name="startDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="startHour" xml:space="preserve">
    <value>Start Hour</value>
  </data>
  <data name="state" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="storedProducts" xml:space="preserve">
    <value>Stored Products?</value>
  </data>
  <data name="subcategory" xml:space="preserve">
    <value>Sucategory</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="UnitOfMeasure" xml:space="preserve">
    <value>Unit Of Measure</value>
  </data>
  <data name="updateAllowance" xml:space="preserve">
    <value>Update Allowance</value>
  </data>
  <data name="updateMileage" xml:space="preserve">
    <value>Update Mileage</value>
  </data>
  <data name="updatePipeline" xml:space="preserve">
    <value>Update Pipeline</value>
  </data>
  <data name="updateTable" xml:space="preserve">
    <value>Update Table</value>
  </data>
  <data name="UploadFile" xml:space="preserve">
    <value>Upload File</value>
  </data>
  <data name="user" xml:space="preserve">
    <value>pedro@gmail.com</value>
  </data>
  <data name="warehouses" xml:space="preserve">
    <value>Warehouses</value>
  </data>
  <data name="won" xml:space="preserve">
    <value>Won</value>
  </data>
  <data name="Zip" xml:space="preserve">
    <value>Zip</value>
  </data>
</root>